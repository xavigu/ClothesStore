{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\Proyectos personal\\\\_Udemy Tutorials\\\\React Course\\\\Clothes-Store\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\Proyectos personal\\\\_Udemy Tutorials\\\\React Course\\\\Clothes-Store\\\\src\\\\App.js\";\nimport React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport Header from './components/header/header.component';\nimport SignPage from './pages/sign/sign.component';\nimport HomePage from './pages/homepage/homepage.component';\nimport ShopPage from './pages/shop/shop.component';\nimport { auth, createUserProfileDocument } from './firebase/firebase.utils';\nimport { connect } from 'react-redux';\nimport { setCurrentUser } from './redux/user/user.actions';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubcribeFromAuth = null;\n  }\n\n  // onAuthStateChanged gives back a function that when we call close the subscription\n  componentDidMount() {\n    this.unsubcribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      if (userAuth) {\n        const userRef = await createUserProfileDocument(userAuth); // check data in database of that userRef\n\n        userRef.onSnapshot(snapshot => {\n          // pass de log as second parameter because is async and that function only calls after setState\n          this.props.setCurrentUser(_objectSpread({\n            id: snapshot.id\n          }, snapshot.data()));\n        });\n      } // setState to null if there is not userAuth\n\n\n      this.setState({\n        currentUser: userAuth\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubcribeFromAuth();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: HomePage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/shop\",\n      component: ShopPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/signin\",\n      component: SignPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    })));\n  }\n\n}\n\n;\n\nconst mapDispatchToProps = dispatch => ({\n  setCurrentUser: user => dispatch(setCurrentUser(user))\n});\n\nexport default connect(null, mapDispatchToProps)(App);","map":{"version":3,"sources":["C:/Users/Usuario/Desktop/Proyectos personal/_Udemy Tutorials/React Course/Clothes-Store/src/App.js"],"names":["React","Switch","Route","Header","SignPage","HomePage","ShopPage","auth","createUserProfileDocument","connect","setCurrentUser","App","Component","unsubcribeFromAuth","componentDidMount","onAuthStateChanged","userAuth","userRef","onSnapshot","snapshot","props","id","data","setState","currentUser","componentWillUnmount","render","mapDispatchToProps","dispatch","user"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,kBAA9B;AAEA,OAAO,WAAP;AAEA,OAAOC,MAAP,MAAmB,sCAAnB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,QAAP,MAAqB,qCAArB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AAEA,SAASC,IAAT,EAAeC,yBAAf,QAAgD,2BAAhD;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,2BAA/B;;AAEA,MAAMC,GAAN,SAAkBX,KAAK,CAACY,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAGhCC,kBAHgC,GAGX,IAHW;AAAA;;AAKhC;AACAC,EAAAA,iBAAiB,GAAE;AACjB,SAAKD,kBAAL,GAA0BN,IAAI,CAACQ,kBAAL,CAAwB,MAAMC,QAAN,IAAkB;AAClE,UAAIA,QAAJ,EAAc;AACZ,cAAMC,OAAO,GAAG,MAAMT,yBAAyB,CAACQ,QAAD,CAA/C,CADY,CAEZ;;AACAC,QAAAA,OAAO,CAACC,UAAR,CAAmBC,QAAQ,IAAI;AAC7B;AACA,eAAKC,KAAL,CAAWV,cAAX;AACIW,YAAAA,EAAE,EAAEF,QAAQ,CAACE;AADjB,aAEOF,QAAQ,CAACG,IAAT,EAFP;AAID,SAND;AAOD,OAXiE,CAYlE;;;AACA,WAAKC,QAAL,CAAc;AAAEC,QAAAA,WAAW,EAAER;AAAf,OAAd;AACD,KAdyB,CAA1B;AAeD;;AAEDS,EAAAA,oBAAoB,GAAE;AACpB,SAAKZ,kBAAL;AACD;;AAGDa,EAAAA,MAAM,GAAE;AACN,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,SAAS,EAAErB,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,SAAS,EAAEC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,SAAZ;AAAsB,MAAA,SAAS,EAAEF,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CAFF,CADF;AAUD;;AAxC+B;;AAyCjC;;AAED,MAAMuB,kBAAkB,GAAGC,QAAQ,KAAK;AACtClB,EAAAA,cAAc,EAAEmB,IAAI,IAAID,QAAQ,CAAClB,cAAc,CAACmB,IAAD,CAAf;AADM,CAAL,CAAnC;;AAIA,eAAepB,OAAO,CAAC,IAAD,EAAOkB,kBAAP,CAAP,CAAkChB,GAAlC,CAAf","sourcesContent":["import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport './App.css';\r\n\r\nimport Header from './components/header/header.component';\r\nimport SignPage from './pages/sign/sign.component';\r\nimport HomePage from './pages/homepage/homepage.component';\r\nimport ShopPage from './pages/shop/shop.component';\r\n\r\nimport { auth, createUserProfileDocument } from './firebase/firebase.utils';\r\nimport { connect } from 'react-redux';\r\nimport { setCurrentUser } from './redux/user/user.actions';\r\n\r\nclass App extends React.Component {\r\n\r\n  // method to unsubscribe\r\n  unsubcribeFromAuth = null;\r\n\r\n  // onAuthStateChanged gives back a function that when we call close the subscription\r\n  componentDidMount(){\r\n    this.unsubcribeFromAuth = auth.onAuthStateChanged(async userAuth => {\r\n      if (userAuth) {\r\n        const userRef = await createUserProfileDocument(userAuth);\r\n        // check data in database of that userRef\r\n        userRef.onSnapshot(snapshot => {\r\n          // pass de log as second parameter because is async and that function only calls after setState\r\n          this.props.setCurrentUser({\r\n              id: snapshot.id,\r\n              ...snapshot.data()\r\n            })\r\n        });\r\n      }\r\n      // setState to null if there is not userAuth\r\n      this.setState({ currentUser: userAuth });\r\n    });\r\n  };\r\n\r\n  componentWillUnmount(){\r\n    this.unsubcribeFromAuth();\r\n  }\r\n\r\n\r\n  render(){\r\n    return (\r\n      <div>\r\n        <Header/>\r\n        <Switch>\r\n          <Route exact path='/' component={HomePage} />\r\n          <Route path='/shop' component={ShopPage} />\r\n          <Route path='/signin' component={SignPage} />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setCurrentUser: user => dispatch(setCurrentUser(user))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(App);\r\n"]},"metadata":{},"sourceType":"module"}