{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyA2nXiFIYyHPDRW_W9jtG7adzaLiZ-hPUg\",\n  authDomain: \"clothes-store-a35af.firebaseapp.com\",\n  databaseURL: \"https://clothes-store-a35af.firebaseio.com\",\n  projectId: \"clothes-store-a35af\",\n  storageBucket: \"clothes-store-a35af.appspot.com\",\n  messagingSenderId: \"68458598170\",\n  appId: \"1:68458598170:web:d1e467b033582889bea6a3\",\n  measurementId: \"G-QB4SVP0WBX\"\n};\nexport const createUserProfile = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.id}`);\n  const snapshot = await userRef.get();\n\n  if (!snapshot.exists) {\n    const displayName = userAuth.displayName,\n          email = userAuth.email;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt\n      });\n    } catch (error) {}\n  }\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore(); // get access to google auth in the auth library\n\nconst provider = new firebase.auth.GoogleAuthProvider(); // trigger the google pop-up whenever we use google authentication passing the provider\n// to the method signInWithPopup after setting parameters\n\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["C:/Users/Usuario/Desktop/Proyectos personal/_Udemy Tutorials/React Course/Clothes-Store/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfile","userAuth","additionalData","userRef","firestore","doc","id","snapshot","get","exists","displayName","email","createdAt","Date","set","error","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AAEA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,MAAM,EAAE,yCADK;AAEbC,EAAAA,UAAU,EAAE,qCAFC;AAGbC,EAAAA,WAAW,EAAE,4CAHA;AAIbC,EAAAA,SAAS,EAAE,qBAJE;AAKbC,EAAAA,aAAa,EAAE,iCALF;AAMbC,EAAAA,iBAAiB,EAAE,aANN;AAObC,EAAAA,KAAK,EAAE,0CAPM;AAQbC,EAAAA,aAAa,EAAE;AARF,CAAf;AAWA,OAAO,MAAMC,iBAAiB,GAAG,OAAMC,QAAN,EAAgBC,cAAhB,KAAmC;AAClE,MAAG,CAACD,QAAJ,EAAc;AAEd,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,EAAG,EAAnC,CAAhB;AAEA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB;;AAEA,MAAG,CAACD,QAAQ,CAACE,MAAb,EAAoB;AAAA,UACVC,WADU,GACaT,QADb,CACVS,WADU;AAAA,UACGC,KADH,GACaV,QADb,CACGU,KADH;AAElB,UAAMC,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AAEA,QAAI;AACF,YAAMV,OAAO,CAACW,GAAR,CAAY;AAChBJ,QAAAA,WADgB;AAEhBC,QAAAA,KAFgB;AAGhBC,QAAAA;AAHgB,OAAZ,CAAN;AAKD,KAND,CAME,OAAOG,KAAP,EAAc,CAEf;AAEF;AACF,CAtBM;AAwBPzB,QAAQ,CAAC0B,aAAT,CAAuBzB,MAAvB;AAEA,OAAO,MAAM0B,IAAI,GAAG3B,QAAQ,CAAC2B,IAAT,EAAb;AACP,OAAO,MAAMb,SAAS,GAAGd,QAAQ,CAACc,SAAT,EAAlB,C,CAGP;;AACA,MAAMc,QAAQ,GAAG,IAAI5B,QAAQ,CAAC2B,IAAT,CAAcE,kBAAlB,EAAjB,C,CACA;AACA;;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAe5B,QAAf","sourcesContent":["import firebase from 'firebase/app';\r\n\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyA2nXiFIYyHPDRW_W9jtG7adzaLiZ-hPUg\",\r\n  authDomain: \"clothes-store-a35af.firebaseapp.com\",\r\n  databaseURL: \"https://clothes-store-a35af.firebaseio.com\",\r\n  projectId: \"clothes-store-a35af\",\r\n  storageBucket: \"clothes-store-a35af.appspot.com\",\r\n  messagingSenderId: \"68458598170\",\r\n  appId: \"1:68458598170:web:d1e467b033582889bea6a3\",\r\n  measurementId: \"G-QB4SVP0WBX\"\r\n};\r\n\r\nexport const createUserProfile = async(userAuth, additionalData) => {\r\n  if(!userAuth) return;\r\n\r\n  const userRef = firestore.doc(`users/${userAuth.id}`);\r\n\r\n  const snapshot = await userRef.get();\r\n\r\n  if(!snapshot.exists){\r\n    const { displayName, email } = userAuth;\r\n    const createdAt = new Date();\r\n\r\n    try {\r\n      await userRef.set({\r\n        displayName,\r\n        email,\r\n        createdAt\r\n      })\r\n    } catch (error) {\r\n      \r\n    }\r\n\r\n  }\r\n}\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\n\r\n// get access to google auth in the auth library\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\n// trigger the google pop-up whenever we use google authentication passing the provider\r\n// to the method signInWithPopup after setting parameters\r\nprovider.setCustomParameters({ prompt: 'select_account' });\r\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\r\n\r\nexport default firebase;"]},"metadata":{},"sourceType":"module"}