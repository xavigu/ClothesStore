{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\Proyectos personal\\\\_Udemy Tutorials\\\\React Course\\\\Clothes-Store\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport { all, call, put, takeLatest } from 'redux-saga/effects';\nimport { auth, createUserProfileDocument, googleProvider } from '../../firebase/firebase.utils';\nimport { googleSignInFailure, googleSignInSuccess } from './user.actions';\nimport UserActionTypes from './user.types';\nexport function* signInWithGoogle() {\n  // every API call needs go into try-catch block to catch the error\n  try {\n    const _ref = yield auth.signInWithPopup(googleProvider),\n          user = _ref.user;\n\n    console.log('user with google popup: ', user); // create user object to storage into the database\n\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get(); //put(), puts things back into our regular Redux flow\n\n    yield put(googleSignInSuccess(_objectSpread({\n      id: userSnapshot.id\n    }, userSnapshot.data())));\n  } catch (error) {\n    yield put(googleSignInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart)]);\n}","map":{"version":3,"sources":["C:/Users/Usuario/Desktop/Proyectos personal/_Udemy Tutorials/React Course/Clothes-Store/src/redux/user/user.sagas.js"],"names":["all","call","put","takeLatest","auth","createUserProfileDocument","googleProvider","googleSignInFailure","googleSignInSuccess","UserActionTypes","signInWithGoogle","signInWithPopup","user","console","log","userRef","userSnapshot","get","id","data","error","onGoogleSignInStart","GOOGLE_SIGN_IN_START","userSagas"],"mappings":";AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,UAAzB,QAA2C,oBAA3C;AAEA,SACEC,IADF,EAEEC,yBAFF,EAGEC,cAHF,QAIO,+BAJP;AAMA,SAASC,mBAAT,EAA8BC,mBAA9B,QAAyD,gBAAzD;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,gBAAV,GAA6B;AAClC;AACA,MAAI;AAAA,iBACe,MAAMN,IAAI,CAACO,eAAL,CAAqBL,cAArB,CADrB;AAAA,UACMM,IADN,QACMA,IADN;;AAEFC,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCF,IAAxC,EAFE,CAGF;;AACA,UAAMG,OAAO,GAAG,MAAMd,IAAI,CAACI,yBAAD,EAA4BO,IAA5B,CAA1B;AACA,UAAMI,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B,CALE,CAMF;;AACA,UAAMf,GAAG,CACPM,mBAAmB;AAAGU,MAAAA,EAAE,EAAEF,YAAY,CAACE;AAApB,OAA2BF,YAAY,CAACG,IAAb,EAA3B,EADZ,CAAT;AAGD,GAVD,CAUE,OAAOC,KAAP,EAAc;AACd,UAAMlB,GAAG,CAACK,mBAAmB,CAACa,KAAD,CAApB,CAAT;AACD;AACF;AAED,OAAO,UAAUC,mBAAV,GAAgC;AACrC,QAAMlB,UAAU,CAACM,eAAe,CAACa,oBAAjB,EAAuCZ,gBAAvC,CAAhB;AACD;AAED,OAAO,UAAUa,SAAV,GAAsB;AAC3B,QAAMvB,GAAG,CAAC,CAACC,IAAI,CAACoB,mBAAD,CAAL,CAAD,CAAT;AACD","sourcesContent":["import { all, call, put, takeLatest } from 'redux-saga/effects';\r\n\r\nimport {\r\n  auth,\r\n  createUserProfileDocument,\r\n  googleProvider,\r\n} from '../../firebase/firebase.utils';\r\n\r\nimport { googleSignInFailure, googleSignInSuccess } from './user.actions';\r\n\r\nimport UserActionTypes from './user.types';\r\n\r\nexport function* signInWithGoogle() {\r\n  // every API call needs go into try-catch block to catch the error\r\n  try {\r\n    const { user } = yield auth.signInWithPopup(googleProvider);\r\n    console.log('user with google popup: ', user);\r\n    // create user object to storage into the database\r\n    const userRef = yield call(createUserProfileDocument, user);\r\n    const userSnapshot = yield userRef.get();\r\n    //put(), puts things back into our regular Redux flow\r\n    yield put(\r\n      googleSignInSuccess({ id: userSnapshot.id, ...userSnapshot.data() })\r\n    );\r\n  } catch (error) {\r\n    yield put(googleSignInFailure(error));\r\n  }\r\n}\r\n\r\nexport function* onGoogleSignInStart() {\r\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\r\n}\r\n\r\nexport function* userSagas() {\r\n  yield all([call(onGoogleSignInStart)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}