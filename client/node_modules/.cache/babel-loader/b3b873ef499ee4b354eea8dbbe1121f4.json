{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\Proyectos personal\\\\_Udemy Tutorials\\\\React Course\\\\Clothes-Store\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Route } from \"react-router-dom\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport { updateCollections } from \"../../redux/shop/shop.actions\";\nimport CollectionPage from '../collection/collection.component';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    const updateCollections = this.props.updateCollections;\n    const collectionRef = firestore.collection('collections'); // GET COLLECTIONS USING PROMISE\n\n    collectionRef.get().then(snapshot => {\n      console.log('collections snapshot', snapshot);\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const match = this.props.match;\n    const loading = this.state.loading;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["C:/Users/Usuario/Desktop/Proyectos personal/_Udemy Tutorials/React Course/Clothes-Store/src/pages/shop/shop.component.jsx"],"names":["React","connect","Route","firestore","convertCollectionsSnapshotToMap","updateCollections","CollectionPage","CollectionsOverview","WithSpinner","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","state","loading","componentDidMount","props","collectionRef","collection","get","then","snapshot","console","log","collectionsMap","setState","render","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AAEA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,MAAMC,8BAA8B,GAAGD,WAAW,CAACD,mBAAD,CAAlD;AACA,MAAMG,yBAAyB,GAAGF,WAAW,CAACF,cAAD,CAA7C;;AAEA,MAAMK,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAsC;AAAA;AAAA;AAAA,SACpCC,KADoC,GAC5B;AACNC,MAAAA,OAAO,EAAE;AADH,KAD4B;AAAA;;AAKpCC,EAAAA,iBAAiB,GAAG;AAAA,UACVV,iBADU,GACY,KAAKW,KADjB,CACVX,iBADU;AAElB,UAAMY,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAAtB,CAFkB,CAIlB;;AACAD,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAAyBC,QAAQ,IAAI;AACnCC,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCF,QAApC;AACA,YAAMG,cAAc,GAAGpB,+BAA+B,CAACiB,QAAD,CAAtD;AACAhB,MAAAA,iBAAiB,CAACmB,cAAD,CAAjB;AACA,WAAKC,QAAL,CAAc;AAACX,QAAAA,OAAO,EAAE;AAAV,OAAd;AACD,KALD;AAMD;;AAEDY,EAAAA,MAAM,GAAE;AAAA,UACCC,KADD,GACW,KAAKX,KADhB,CACCW,KADD;AAAA,UAECb,OAFD,GAEa,KAAKD,KAFlB,CAECC,OAFD;AAGP,WACC;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEa,KAAK,CAACC,IAAK,EAAjC;AACO,MAAA,MAAM,EAAGZ,KAAD,IAAW,oBAAC,8BAAD;AAAgC,QAAA,SAAS,EAAEF;AAA3C,SAAwDE,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAD1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAGE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEW,KAAK,CAACC,IAAK,gBAA3B;AACO,MAAA,MAAM,EAAGZ,KAAD,IAAW,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAEF;AAAtC,SAAmDE,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAD1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADD;AAQA;;AA7BmC;;AAgCtC,MAAMa,kBAAkB,GAAGC,QAAQ,KAAK;AACtCzB,EAAAA,iBAAiB,EAAEmB,cAAc,IAC/BM,QAAQ,CAACzB,iBAAiB,CAACmB,cAAD,CAAlB;AAF4B,CAAL,CAAnC;;AAKA,eAAevB,OAAO,CAAC,IAAD,EAAO4B,kBAAP,CAAP,CAAkClB,QAAlC,CAAf","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\r\nimport { updateCollections } from \"../../redux/shop/shop.actions\";\r\n\r\nimport CollectionPage from '../collection/collection.component';\r\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\r\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\r\n\r\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\r\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\r\n\r\nclass ShopPage extends React.Component{\r\n  state = {\r\n    loading: true\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { updateCollections } = this.props;\r\n    const collectionRef = firestore.collection('collections');\r\n\r\n    // GET COLLECTIONS USING PROMISE\r\n    collectionRef.get().then(snapshot => {\r\n      console.log('collections snapshot', snapshot);\r\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n      updateCollections(collectionsMap);\r\n      this.setState({loading: false});\r\n    });\r\n  }\r\n\r\n  render(){\r\n   const { match } = this.props;\r\n   const { loading } = this.state;\r\n   return(\r\n    <div className='shop-page'>\r\n      <Route exact path={`${match.path}`} \r\n             render={(props) => <CollectionsOverviewWithSpinner isLoading={loading} {...props}/>}/>\r\n      <Route path={`${match.path}/:collectionId`} \r\n             render={(props) => <CollectionPageWithSpinner isLoading={loading} {...props}/>}/>\r\n    </div>\r\n   )\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  updateCollections: collectionsMap => \r\n    dispatch(updateCollections(collectionsMap))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(ShopPage);\r\n"]},"metadata":{},"sourceType":"module"}