{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\Proyectos personal\\\\_Udemy Tutorials\\\\React Course\\\\Clothes-Store\\\\client\\\\src\\\\components\\\\sign-up\\\\sign-up.component.jsx\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { signUpStart } from '../../redux/user/user.actions';\nimport CustomButton from '../custom-button/custom-button.component';\nimport FormInput from '../form-input/form-input.component';\nimport './sign-up.styles.scss';\n\nconst SignUp = ({\n  signUpStart\n}) => {\n  const [userCredentials, setUserCredentials] = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const {\n    displayName,\n    email,\n    password,\n    confirmPassword\n  } = userCredentials;\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert('passwords don´t match');\n      return;\n    }\n\n    ;\n    signUpStart({\n      displayName,\n      email,\n      password\n    });\n  };\n\n  const handleChange = e => {\n    const {\n      value,\n      name\n    } = e.target;\n    setUserCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sign-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, \"I do not have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, \"Sign up with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"sign-up-form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    name: \"displayName\",\n    type: \"text\",\n    label: \"Display Name\",\n    value: displayName,\n    onChange: handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"email\",\n    type: \"email\",\n    label: \"Email\",\n    value: email,\n    onChange: handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"password\",\n    type: \"password\",\n    label: \"Password\",\n    value: password,\n    onChange: handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"confirmPassword\",\n    type: \"password\",\n    label: \"Confirm password\",\n    value: confirmPassword,\n    onChange: handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, \"SIGN UP\")));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["C:/Users/Usuario/Desktop/Proyectos personal/_Udemy Tutorials/React Course/Clothes-Store/client/src/components/sign-up/sign-up.component.jsx"],"names":["React","useState","connect","signUpStart","CustomButton","FormInput","SignUp","userCredentials","setUserCredentials","displayName","email","password","confirmPassword","handleSubmit","e","preventDefault","alert","handleChange","value","name","target","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { signUpStart } from '../../redux/user/user.actions';\r\n\r\nimport CustomButton from '../custom-button/custom-button.component';\r\nimport FormInput from '../form-input/form-input.component';\r\n\r\nimport  './sign-up.styles.scss';\r\n\r\nconst SignUp = ({signUpStart}) => {\r\n  const [userCredentials, setUserCredentials] = useState({ displayName: '', email: '', password: '', confirmPassword: ''});\r\n  const {displayName, email, password, confirmPassword} = userCredentials;\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (password !== confirmPassword) {\r\n      alert('passwords don´t match');\r\n      return;\r\n    };\r\n\r\n    signUpStart({displayName, email, password});\r\n  }\r\n\r\n  const handleChange = e => {\r\n    const {value, name} = e.target;\r\n\r\n    setUserCredentials({...userCredentials, [name]: value })\r\n  }\r\n\r\n  return (\r\n    <div className='sign-up'>\r\n      <h2 className='title'>I do not have an account</h2>\r\n      <span>Sign up with your email and password</span>\r\n\r\n      <form className='sign-up-form' onSubmit={handleSubmit}>\r\n        <FormInput \r\n          name=\"displayName\" \r\n          type=\"text\"\r\n          label=\"Display Name\" \r\n          value={displayName} \r\n          onChange= {handleChange}\r\n          required/>\r\n        <FormInput \r\n          name=\"email\" \r\n          type=\"email\"\r\n          label=\"Email\" \r\n          value={email} \r\n          onChange= {handleChange}\r\n          required/>\r\n        <FormInput \r\n          name=\"password\" \r\n          type=\"password\" \r\n          label=\"Password\" \r\n          value={password}\r\n          onChange= {handleChange} \r\n          required/>\r\n        <FormInput \r\n          name=\"confirmPassword\" \r\n          type=\"password\" \r\n          label=\"Confirm password\" \r\n          value={confirmPassword}\r\n          onChange= {handleChange} \r\n          required/>\r\n        <CustomButton type='submit'>\r\n          SIGN UP\r\n        </CustomButton>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(SignUp);\r\n"]},"metadata":{},"sourceType":"module"}