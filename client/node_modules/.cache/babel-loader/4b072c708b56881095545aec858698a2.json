{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\Proyectos personal\\\\_Udemy Tutorials\\\\React Course\\\\Clothes-Store\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport CollectionPage from '../collection/collection.component';\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const collectionRef = firestore.collection('collections');\n    collectionRef.onSnapshot(async snapshot => {\n      convertCollectionsSnapshotToMap(snapshot);\n    });\n  }\n\n  render() {\n    const match = this.props.match;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      component: CollectionsOverview,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      component: CollectionPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default ShopPage;","map":{"version":3,"sources":["C:/Users/Usuario/Desktop/Proyectos personal/_Udemy Tutorials/React Course/Clothes-Store/src/pages/shop/shop.component.jsx"],"names":["React","Route","CollectionsOverview","firestore","convertCollectionsSnapshotToMap","CollectionPage","ShopPage","Component","componentDidMount","collectionRef","collection","onSnapshot","snapshot","render","match","props","path","mapDispatchToProps","dispatch","updateCollections","collectionsMap"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AAEA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AACA,OAAOC,cAAP,MAA2B,oCAA3B;;AAEA,MAAMC,QAAN,SAAuBN,KAAK,CAACO,SAA7B,CAAsC;AAElCC,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,aAAa,GAAGN,SAAS,CAACO,UAAV,CAAqB,aAArB,CAAtB;AAEAD,IAAAA,aAAa,CAACE,UAAd,CAA0B,MAAMC,QAAN,IAAkB;AAC1CR,MAAAA,+BAA+B,CAACQ,QAAD,CAA/B;AACD,KAFD;AAGD;;AAEHC,EAAAA,MAAM,GAAE;AAAA,UACCC,KADD,GACW,KAAKC,KADhB,CACCD,KADD;AAEP,WACC;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEA,KAAK,CAACE,IAAK,EAAjC;AAAoC,MAAA,SAAS,EAAEd,mBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEY,KAAK,CAACE,IAAK,gBAA3B;AAA4C,MAAA,SAAS,EAAEX,cAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADD;AAMA;;AAlBmC;;AAqBtC,MAAMY,kBAAkB,GAAGC,QAAQ,KAAK;AACtCC,EAAAA,iBAAiB,EAAEC,cAAc,IAC/BF,QAAQ,CAACC,iBAAiB,CAACC,cAAD,CAAlB;AAF4B,CAAL,CAAnC;;AAKA,eAAed,QAAf","sourcesContent":["import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\r\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\r\nimport CollectionPage from '../collection/collection.component';\r\n\r\nclass ShopPage extends React.Component{\r\n\r\n    componentDidMount() {\r\n      const collectionRef = firestore.collection('collections');\r\n  \r\n      collectionRef.onSnapshot( async snapshot => {\r\n        convertCollectionsSnapshotToMap(snapshot);\r\n      });\r\n    }\r\n\r\n  render(){\r\n   const { match } = this.props;\r\n   return(\r\n    <div className='shop-page'>\r\n      <Route exact path={`${match.path}`} component={CollectionsOverview}/>\r\n      <Route path={`${match.path}/:collectionId`} component={CollectionPage}/>\r\n    </div>\r\n   )\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  updateCollections: collectionsMap => \r\n    dispatch(updateCollections(collectionsMap))\r\n})\r\n\r\nexport default ShopPage;\r\n"]},"metadata":{},"sourceType":"module"}